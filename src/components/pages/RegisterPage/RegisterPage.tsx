"use client";

import { useState } from "react";
import styles from "./RegisterPage.module.scss";
import { signup } from "@src/lib/api/auth";
import { useRouter } from "next/navigation";
import { regions } from "@src/data/regions";

export default function RegisterPage() {
    const router = useRouter();

    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [companyName, setCompanyName] = useState("");
    const [phone, setPhone] = useState("");
    const [region, setRegion] = useState("");
    const [message, setMessage] = useState<string | null>(null);

    const handleRegister = async (e: React.FormEvent) => {
        e.preventDefault();

        if (!region) {
            setMessage("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω");
            return;
        }

        setMessage("–ó–∞–≥—Ä—É–∑–∫–∞...");

        try {
            const response = await signup({
                email,
                password,
                password_confirmation: password,
                company_name: companyName,
                phone,
                region, // üëà –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ id
                role: 1,
            });
            setMessage(`‚úÖ ${response.status.message}`);
            router.push("/profile/my_cars");
        } catch (error: any) {
            setMessage(`‚ùå ${error.message}`);
        }
    };

    return (
        <main className={styles.page}>
            <form onSubmit={handleRegister} className={styles.form}>
                <h1 className={styles.title}>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>

              

                <input
                    type="text"
                    placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
                    value={companyName}
                    onChange={e => setCompanyName(e.target.value)}
                    required
                    className={styles.input}
                />

                <input
                    type="tel"
                    placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ WhatsApp"
                    value={phone}
                    onChange={e => setPhone(e.target.value)}
                    required
                    className={styles.input}
                />

                <select
                    value={region}
                    onChange={e => setRegion(e.target.value)}
                    required
                    className={styles.input}
                >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω</option>
                    {regions.map(r => (
                        <option key={r.id} value={r.id}>
                            {r.label}
                        </option>
                    ))}
                </select>

                <input
                    type="email"
                    placeholder="Email"
                    value={email}
                    onChange={e => setEmail(e.target.value)}
                    required
                    className={styles.input}
                />

                <input
                    type="password"
                    placeholder="–ü–∞—Ä–æ–ª—å"
                    value={password}
                    onChange={e => setPassword(e.target.value)}
                    required
                    className={styles.input}
                />

                <button type="submit" className={styles.button}>
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                </button>

                <p className={styles.description}>
                    –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–æ–π–¥—ë—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é. –≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º
                    –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —É–º–µ–Ω—å—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–Ω–∞–¥—ë–∂–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ú—ã
                    —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ WhatsApp –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
                </p>

                {message && <p className={styles.message}>{message}</p>}
            </form>
        </main>
    );
}
